In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:397,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:60:39: warning: ignoring attributes on template argument '__m128' {aka '__vector(4) float'} [-Wignored-attributes]
 template<> struct is_arithmetic<__m128>  { enum { value = true }; };
                                       ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:61:40: warning: ignoring attributes on template argument '__m128i' {aka '__vector(2) long long int'} [-Wignored-attributes]
 template<> struct is_arithmetic<__m128i> { enum { value = true }; };
                                        ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:62:40: warning: ignoring attributes on template argument '__m128d' {aka '__vector(2) double'} [-Wignored-attributes]
 template<> struct is_arithmetic<__m128d> { enum { value = true }; };
                                        ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:161:43: warning: ignoring attributes on template argument 'Eigen::internal::Packet4f' {aka '__vector(4) float'} [-Wignored-attributes]
 template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };
                                           ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:162:43: warning: ignoring attributes on template argument 'Eigen::internal::Packet2d' {aka '__vector(2) double'} [-Wignored-attributes]
 template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };
                                           ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:163:43: warning: ignoring attributes on template argument 'Eigen::internal::Packet4i' {aka '__vector(2) long long int'} [-Wignored-attributes]
 template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };
                                           ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:718:35: warning: ignoring attributes on template argument 'Eigen::internal::Packet4f' {aka '__vector(4) float'} [-Wignored-attributes]
 struct palign_impl<Offset,Packet4f>
                                   ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:741:35: warning: ignoring attributes on template argument 'Eigen::internal::Packet4i' {aka '__vector(2) long long int'} [-Wignored-attributes]
 struct palign_impl<Offset,Packet4i>
                                   ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:764:35: warning: ignoring attributes on template argument 'Eigen::internal::Packet2d' {aka '__vector(2) double'} [-Wignored-attributes]
 struct palign_impl<Offset,Packet2d>
                                   ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:778:34: warning: ignoring attributes on template argument 'Eigen::internal::Packet4f' {aka '__vector(4) float'} [-Wignored-attributes]
 ptranspose(PacketBlock<Packet4f,4>& kernel) {
                                  ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:783:34: warning: ignoring attributes on template argument 'Eigen::internal::Packet2d' {aka '__vector(2) double'} [-Wignored-attributes]
 ptranspose(PacketBlock<Packet2d,2>& kernel) {
                                  ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/PacketMath.h:790:34: warning: ignoring attributes on template argument 'Eigen::internal::Packet4i' {aka '__vector(2) long long int'} [-Wignored-attributes]
 ptranspose(PacketBlock<Packet4i,4>& kernel) {
                                  ^
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:377,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/Default/ConjHelper.h:15:70: warning: ignoring attributes on template argument 'Eigen::internal::Packet4f' {aka '__vector(4) float'} [-Wignored-attributes]
   template<> struct conj_helper<PACKET_REAL, PACKET_CPLX, false,false> {                                          \
                                                                      ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/Complex.h:232:1: note: in expansion of macro 'EIGEN_MAKE_CONJ_HELPER_CPLX_REAL'
 EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet2cf,Packet4f)
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/Default/ConjHelper.h:22:70: warning: ignoring attributes on template argument 'Eigen::internal::Packet4f' {aka '__vector(4) float'} [-Wignored-attributes]
   template<> struct conj_helper<PACKET_CPLX, PACKET_REAL, false,false> {                                          \
                                                                      ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/Complex.h:232:1: note: in expansion of macro 'EIGEN_MAKE_CONJ_HELPER_CPLX_REAL'
 EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet2cf,Packet4f)
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/Default/ConjHelper.h:15:70: warning: ignoring attributes on template argument 'Eigen::internal::Packet2d' {aka '__vector(2) double'} [-Wignored-attributes]
   template<> struct conj_helper<PACKET_REAL, PACKET_CPLX, false,false> {                                          \
                                                                      ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/Complex.h:417:1: note: in expansion of macro 'EIGEN_MAKE_CONJ_HELPER_CPLX_REAL'
 EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet1cd,Packet2d)
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/Default/ConjHelper.h:22:70: warning: ignoring attributes on template argument 'Eigen::internal::Packet2d' {aka '__vector(2) double'} [-Wignored-attributes]
   template<> struct conj_helper<PACKET_CPLX, PACKET_REAL, false,false> {                                          \
                                                                      ^
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/arch/SSE/Complex.h:417:1: note: in expansion of macro 'EIGEN_MAKE_CONJ_HELPER_CPLX_REAL'
 EIGEN_MAKE_CONJ_HELPER_CPLX_REAL(Packet1cd,Packet2d)
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:370,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h: In instantiation of 'struct Eigen::internal::find_best_packet<float, 4>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:22:57:   required from 'struct Eigen::internal::traits<Eigen::Matrix<float, 4, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/Quaternion.h:242:7:   required from 'struct Eigen::internal::traits<Eigen::Quaternion<float> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/arch/Geometry_SSE.h:24:46:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:44: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<float>::type' {aka '__vector(4) float'} [-Wignored-attributes]
          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<float>::type' {aka '__vector(4) float'} [-Wignored-attributes]
          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<float>::type' {aka '__vector(4) float'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::unpacket_traits<__vector(4) float>::half' {aka '__vector(4) float'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:205:88: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<float>::type' {aka '__vector(4) float'} [-Wignored-attributes]
   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
                                                                                        ^~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:439,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<float, 4, 1>, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Matrix<float, 4, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Matrix<float, 4, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Matrix<float, 4, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:178:7:   required from 'class Eigen::Matrix<float, 4, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/Quaternion.h:46:50:   required from 'class Eigen::QuaternionBase<Eigen::Quaternion<float> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/Quaternion.h:250:7:   required from 'class Eigen::Quaternion<float>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/arch/Geometry_SSE.h:27:3:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<float>::type' {aka '__vector(4) float'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:370,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h: In instantiation of 'struct Eigen::internal::find_best_packet<double, 4>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:22:57:   required from 'struct Eigen::internal::traits<Eigen::Matrix<double, 4, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/Quaternion.h:242:7:   required from 'struct Eigen::internal::traits<Eigen::Quaternion<double> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/arch/Geometry_SSE.h:88:47:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:44: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::unpacket_traits<__vector(2) double>::half' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:205:88: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
                                                                                        ^~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:439,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, 4, 1>, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Matrix<double, 4, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Matrix<double, 4, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:178:7:   required from 'class Eigen::Matrix<double, 4, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/Quaternion.h:46:50:   required from 'class Eigen::QuaternionBase<Eigen::Quaternion<double> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/Quaternion.h:250:7:   required from 'class Eigen::Quaternion<double>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Geometry/arch/Geometry_SSE.h:92:3:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:370,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h: In instantiation of 'struct Eigen::internal::find_best_packet<int, -1>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:22:57:   required from 'struct Eigen::internal::traits<Eigen::Matrix<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Array.h:17:8:   required from 'struct Eigen::internal::traits<Eigen::Array<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Array<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Array.h:45:7:   required from 'class Eigen::Array<int, -1, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/vector.hpp:17:8:   required from 'struct tmbutils::vector<int>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/vector.hpp:45:43:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:44: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::unpacket_traits<__vector(2) long long int>::half' {aka '__vector(2) long long int'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:205:88: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
                                                                                        ^~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:439,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Array<int, -1, 1>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Array<int, -1, 1>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Array<int, -1, 1>, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Array<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::Array<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Array<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Array.h:45:7:   required from 'class Eigen::Array<int, -1, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/vector.hpp:17:8:   required from 'struct tmbutils::vector<int>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/vector.hpp:45:43:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from 'class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from 'struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/array.hpp:237:5:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> >, Eigen::Dense>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, const Eigen::Array<int, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/array.hpp:237:5:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::Array<int, -1, 1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::Array<int, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::Array<int, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::Array<int, -1, 1>, Eigen::Dense>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<int, int>, const Eigen::Array<int, -1, 1>, const Eigen::Array<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/array.hpp:238:22:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Reverse<Eigen::Array<int, -1, 1>, 2>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Reverse<Eigen::Array<int, -1, 1>, 2>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Reverse<Eigen::Array<int, -1, 1>, 2> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::Reverse<Eigen::Array<int, -1, 1>, 2> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Reverse.h:63:52:   required from 'class Eigen::Reverse<Eigen::Array<int, -1, 1>, 2>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/array.hpp:247:27:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:520,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Reverse.h: In instantiation of 'class Eigen::Reverse<Eigen::Array<int, -1, 1>, 2>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/array.hpp:247:27:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Reverse.h:85:71: warning: ignoring attributes on template argument 'Eigen::ArrayBase<Eigen::Reverse<Eigen::Array<int, -1, 1>, 2> >::PacketScalar' {aka '__vector(2) long long int'} [-Wignored-attributes]
     typedef internal::reverse_packet_cond<PacketScalar,ReversePacket> reverse_packet;
                                                                       ^~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:370,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h: In instantiation of 'struct Eigen::internal::find_best_packet<double, -1>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:22:57:   required from 'struct Eigen::internal::traits<Eigen::Matrix<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Map.h:18:8:   required from 'struct Eigen::internal::traits<Eigen::Map<Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/ForwardDeclarations.h:32:54:   required from 'struct Eigen::internal::accessors_level<Eigen::Map<Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/ForwardDeclarations.h:109:75:   required from 'class Eigen::Map<Eigen::Matrix<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/convert.hpp:99:24:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:44: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
                                       ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
          bool Stop = Size==Dynamic || (Size%unpacket_traits<PacketType>::size)==0 || is_same<PacketType,typename unpacket_traits<PacketType>::half>::value>
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:187:83: warning: ignoring attributes on template argument 'Eigen::internal::unpacket_traits<__vector(2) double>::half' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:205:88: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
   typedef typename find_best_packet_helper<Size,typename packet_traits<T>::type>::type type;
                                                                                        ^~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:439,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1>, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Matrix<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:178:7:   required from 'class Eigen::Matrix<double, -1, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Map.h:24:30:   required from 'struct Eigen::internal::traits<Eigen::Map<Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/ForwardDeclarations.h:32:54:   required from 'struct Eigen::internal::accessors_level<Eigen::Map<Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/ForwardDeclarations.h:109:75:   required from 'class Eigen::Map<Eigen::Matrix<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/convert.hpp:99:24:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1> >, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1> >, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MapBase.h:37:34:   required from 'class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1> >, 0>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MapBase.h:221:34:   required from 'class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1> >, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Map.h:94:79:   required from 'class Eigen::Map<Eigen::Matrix<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/convert.hpp:99:24:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Array<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::Array<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Array<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Array.h:45:7:   required from 'class Eigen::Array<double, -1, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/vector.hpp:17:8:   required from 'struct tmbutils::vector<double>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/checkpoint_macro.hpp:61:62:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1>, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Matrix<double, -1, -1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:178:7:   required from 'class Eigen::Matrix<double, -1, -1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/vector.hpp:88:8:   required from 'struct tmbutils::matrix<double>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/expm.hpp:24:8:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Matrix<int, -1, -1>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<int, -1, -1>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<int, -1, -1>, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Matrix<int, -1, -1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Matrix<int, -1, -1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Matrix<int, -1, -1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:178:7:   required from 'class Eigen::Matrix<int, -1, -1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/vector.hpp:88:8:   required from 'struct tmbutils::matrix<int>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:518:51:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Matrix<int, -1, 1>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<int, -1, 1>, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Matrix<int, -1, 1>, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Matrix<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Matrix<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:98:7:   required from 'class Eigen::PlainObjectBase<Eigen::Matrix<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Matrix.h:178:7:   required from 'class Eigen::Matrix<int, -1, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PermutationMatrix.h:65:13:   required from 'class Eigen::PermutationBase<Eigen::PermutationMatrix<-1, -1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PermutationMatrix.h:297:7:   required from 'class Eigen::PermutationMatrix<-1, -1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/density.hpp:900:45:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/SparseCore:37,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Sparse:26,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:54,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of 'class Eigen::SparseMatrixBase<Eigen::SparseMatrix<double> >':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:36:7:   required from 'class Eigen::SparseCompressedBase<Eigen::SparseMatrix<double> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:96:7:   required from 'class Eigen::SparseMatrix<double>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/precompile.hpp:105:35:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:439,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MapBase.h:37:34:   required from 'class Eigen::MapBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MapBase.h:221:34:   required from 'class Eigen::MapBase<Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Map.h:94:79:   required from 'class Eigen::Map<Eigen::Array<double, -1, 1>, 0, Eigen::Stride<0, 0> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/array.hpp:22:8:   required from 'struct tmbutils::array<double>'
src/LGCP_cov_spde_marks_prob.cpp:119:48:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1>, Eigen::Dense>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:923:42:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
src/LGCP_cov_spde_marks_prob.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1735:16:   required from here
src/LGCP_cov_spde_marks_prob.cpp:160:30: error: no matching function for call to 'dnorm(Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar&, double, CppAD::AD<double>, bool)'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:101,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note: candidate: 'template<class Type> Type dnorm(Type, Type, Type, int)'
 Type dnorm(Type x, Type mean, Type sd, int give_log=0)
      ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<double>' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<double>'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<double>' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<double>'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<double>'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<double>'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:107,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note: candidate: 'template<class Type, class T1, class T2> tmbutils::vector<Type> tmbutils::dnorm(tmbutils::vector<Type>, T1, T2, int)'
 vector<Type> dnorm(vector<Type> x, T1 mean, T2 sd, int give_log=0)
              ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'CppAD::AD<double>' is not derived from 'tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: error: no matching function for call to 'dnorm(Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar&, double, CppAD::AD<double>, bool)'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:101,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note: candidate: 'template<class Type> Type dnorm(Type, Type, Type, int)'
 Type dnorm(Type x, Type mean, Type sd, int give_log=0)
      ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<double>' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<double>'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<double>' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<double>'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<double>'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<double>'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:107,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note: candidate: 'template<class Type, class T1, class T2> tmbutils::vector<Type> tmbutils::dnorm(tmbutils::vector<Type>, T1, T2, int)'
 vector<Type> dnorm(vector<Type> x, T1 mean, T2 sd, int give_log=0)
              ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'CppAD::AD<double>' is not derived from 'tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1736:16:   required from here
src/LGCP_cov_spde_marks_prob.cpp:160:30: error: no matching function for call to 'dnorm(Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar&, double, CppAD::AD<CppAD::AD<double> >, bool)'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:101,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note: candidate: 'template<class Type> Type dnorm(Type, Type, Type, int)'
 Type dnorm(Type x, Type mean, Type sd, int give_log=0)
      ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<CppAD::AD<double> >' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<double> >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<CppAD::AD<double> >' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<double> >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<double> >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<double> >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:107,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note: candidate: 'template<class Type, class T1, class T2> tmbutils::vector<Type> tmbutils::dnorm(tmbutils::vector<Type>, T1, T2, int)'
 vector<Type> dnorm(vector<Type> x, T1 mean, T2 sd, int give_log=0)
              ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'CppAD::AD<CppAD::AD<double> >' is not derived from 'tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: error: no matching function for call to 'dnorm(Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar&, double, CppAD::AD<CppAD::AD<double> >, bool)'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:101,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note: candidate: 'template<class Type> Type dnorm(Type, Type, Type, int)'
 Type dnorm(Type x, Type mean, Type sd, int give_log=0)
      ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<CppAD::AD<double> >' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<double> >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<CppAD::AD<double> >' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<double> >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<double> >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<double> >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:107,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note: candidate: 'template<class Type, class T1, class T2> tmbutils::vector<Type> tmbutils::dnorm(tmbutils::vector<Type>, T1, T2, int)'
 vector<Type> dnorm(vector<Type> x, T1 mean, T2 sd, int give_log=0)
              ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'CppAD::AD<CppAD::AD<double> >' is not derived from 'tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1737:16:   required from here
src/LGCP_cov_spde_marks_prob.cpp:160:30: error: no matching function for call to 'dnorm(Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar&, double, CppAD::AD<CppAD::AD<CppAD::AD<double> > >, bool)'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:101,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note: candidate: 'template<class Type> Type dnorm(Type, Type, Type, int)'
 Type dnorm(Type x, Type mean, Type sd, int give_log=0)
      ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<CppAD::AD<CppAD::AD<double> > >' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<CppAD::AD<CppAD::AD<double> > >' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:107,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note: candidate: 'template<class Type, class T1, class T2> tmbutils::vector<Type> tmbutils::dnorm(tmbutils::vector<Type>, T1, T2, int)'
 vector<Type> dnorm(vector<Type> x, T1 mean, T2 sd, int give_log=0)
              ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:30: note:   'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' is not derived from 'tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                         ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: error: no matching function for call to 'dnorm(Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar&, double, CppAD::AD<CppAD::AD<CppAD::AD<double> > >, bool)'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:101,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note: candidate: 'template<class Type> Type dnorm(Type, Type, Type, int)'
 Type dnorm(Type x, Type mean, Type sd, int give_log=0)
      ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:9:6: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<CppAD::AD<CppAD::AD<double> > >' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   deduced conflicting types for parameter 'Type' ('CppAD::AD<CppAD::AD<CppAD::AD<double> > >' and 'double')
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, Type, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(Type, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, Type, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:100,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note: candidate: 'template<class Type> tmbutils::vector<Type> dnorm(const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, const tmbutils::vector<Type>&, int)'
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:17: note:   template argument deduction/substitution failed:
 VECTORIZE4_ttti(dnorm)
                 ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/Vectorize.hpp:38:14: note: in definition of macro 'GVECTORIZE'
 vector<Type> FUN( declare##Type1(arg1) comma##Type2   \
              ^~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/dnorm.hpp:15:1: note: in expansion of macro 'VECTORIZE4_ttti'
 VECTORIZE4_ttti(dnorm)
 ^~~~~~~~~~~~~~~
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar' {aka 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >'} is not derived from 'const tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:107,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note: candidate: 'template<class Type, class T1, class T2> tmbutils::vector<Type> tmbutils::dnorm(tmbutils::vector<Type>, T1, T2, int)'
 vector<Type> dnorm(vector<Type> x, T1 mean, T2 sd, int give_log=0)
              ^~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/tmbutils_extra.hpp:13:14: note:   template argument deduction/substitution failed:
src/LGCP_cov_spde_marks_prob.cpp:160:95: note:   'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' is not derived from 'tmbutils::vector<Type>'
     nll -= log((1-p[i])*dnorm(marks[i], 0.0, exp(-linear_pred_mark_no[i]), false) + p[i]*dnorm(marks[i], 0.0, exp(-linear_pred_mark_o[i]), false)); //(linear_pred_mark[i] - exp(linear_pred_mark[i])*marks[i]);
                                                                                          ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:439,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1> > >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseUnaryOp.h:94:7:   required from 'class Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1> >, Eigen::Dense>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseUnaryOp.h:55:7:   required from 'class Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/util/XprHelper.h:510:38:   required from 'struct Eigen::internal::cast_return_type<Eigen::Map<Eigen::Matrix<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_cast_op<double, double>, const Eigen::Map<Eigen::Matrix<double, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/plugins/CommonCwiseUnaryOps.h:48:179:   required from 'struct Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1> > >::CastXpr<double>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/plugins/CommonCwiseUnaryOps.h:62:1:   required by substitution of 'template<class NewType> typename Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1> > >::CastXpr<NewType>::Type Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1> > >::cast<NewType>() const [with NewType = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/convert.hpp:99:17:   required from 'tmbutils::vector<Type> asVector(SEXP) [with Type = double; SEXP = SEXPREC*]'
src/LGCP_cov_spde_marks_prob.cpp:20:3:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from 'class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from 'struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/EigenBase.h:41:59:   required from 'struct Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h:26:34:   required from 'class Eigen::SparseMatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:36:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double>, Eigen::Sparse>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/R_inla.hpp:39:20:   required from 'Eigen::SparseMatrix<Scalar> R_inla::Q_spde(R_inla::spde_t<Type>, Type) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:113:32:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/SparseCore:37,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Sparse:26,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:54,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of 'class Eigen::SparseMatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:36:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double>, Eigen::Sparse>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/R_inla.hpp:39:20:   required from 'Eigen::SparseMatrix<Scalar> R_inla::Q_spde(R_inla::spde_t<Type>, Type) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:113:32:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of 'class Eigen::SparseMatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > > >':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:36:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, Eigen::Sparse>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/R_inla.hpp:39:29:   required from 'Eigen::SparseMatrix<Scalar> R_inla::Q_spde(R_inla::spde_t<Type>, Type) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:113:32:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of 'class Eigen::SparseMatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> > >':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:36:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double>, Eigen::Sparse>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/R_inla.hpp:39:60:   required from 'Eigen::SparseMatrix<Scalar> R_inla::Q_spde(R_inla::spde_t<Type>, Type) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:113:32:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:439,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from 'class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:38:28:   required from 'struct Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/density.hpp:964:23:   required from 'density::SCALE_t<distribution>::scalartype density::SCALE_t<distribution>::operator()(density::SCALE_t<distribution>::vectortype) [with distribution = density::GMRF_t<double>; density::SCALE_t<distribution>::scalartype = double; density::SCALE_t<distribution>::vectortype = tmbutils::vector<double>; typename distribution::scalartype = double]'
src/LGCP_cov_spde_marks_prob.cpp:119:48:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:148:7:   required from 'class Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, Eigen::Dense>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseBinaryOp.h:77:7:   required from 'class Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/density.hpp:964:23:   required from 'density::SCALE_t<distribution>::scalartype density::SCALE_t<distribution>::operator()(density::SCALE_t<distribution>::vectortype) [with distribution = density::GMRF_t<double>; density::SCALE_t<distribution>::scalartype = double; density::SCALE_t<distribution>::vectortype = tmbutils::vector<double>; typename distribution::scalartype = double]'
src/LGCP_cov_spde_marks_prob.cpp:119:48:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayWrapper.h:140:7:   required from 'class Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/convenience.hpp:49:13:   required from 'tmbutils::vector<Type> operator*(Eigen::SparseMatrix<Scalar>, tmbutils::vector<Type>) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:137:30:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Product.h:115:7:   required from 'class Eigen::internal::dense_product_base<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0, 7>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Product.h:147:7:   required from 'class Eigen::ProductImpl<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0, Eigen::Dense>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Product.h:71:7:   required from 'class Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/convenience.hpp:49:13:   required from 'tmbutils::vector<Type> operator*(Eigen::SparseMatrix<Scalar>, tmbutils::vector<Type>) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:137:30:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::ArrayWrapper<const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::ArrayWrapper<const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayBase.h:39:34:   required from 'class Eigen::ArrayBase<Eigen::ArrayWrapper<const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ArrayWrapper.h:42:7:   required from 'class Eigen::ArrayWrapper<const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/convenience.hpp:49:33:   required from 'tmbutils::vector<Type> operator*(Eigen::SparseMatrix<Scalar>, tmbutils::vector<Type>) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:137:30:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::SparseMatrix<double>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:298:80:   required from 'struct Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1391:8:   required from 'struct Eigen::internal::evaluator<Eigen::SparseMatrix<double> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:495:54:   required from 'struct Eigen::internal::sparse_conjunction_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, Eigen::internal::IndexBased, Eigen::internal::IteratorBased, double, double>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:345:8:   required from 'struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, Eigen::internal::IndexBased, Eigen::internal::IteratorBased, double, double>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CoreEvaluators.h:665:8:   required from 'struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CoreEvaluators.h:99:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h:64:51:   required from 'struct Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >, Eigen::internal::IteratorBased, Eigen::internal::IteratorBased, double, double>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CoreEvaluators.h:665:8:   required from 'struct Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:683:103:   required from 'Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::SparseMatrix(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/R_inla.hpp:39:67:   required from 'Eigen::SparseMatrix<Scalar> R_inla::Q_spde(R_inla::spde_t<Type>, Type) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:113:32:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/SparseCore:37,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Sparse:26,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:54,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of 'class Eigen::SparseMatrixBase<Eigen::SparseMatrix<double, 1, int> >':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:36:7:   required from 'class Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 1, int> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:96:7:   required from 'class Eigen::SparseMatrix<double, 1, int>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:926:66:   required from 'void Eigen::internal::set_from_triplets(const InputIterator&, const InputIterator&, SparseMatrixType&, DupFunctor) [with InputIterator = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; SparseMatrixType = Eigen::SparseMatrix<double>; DupFunctor = Eigen::internal::scalar_sum_op<double, double>]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:996:92:   required from 'void Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::setFromTriplets(const InputIterators&, const InputIterators&) [with InputIterators = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/spmat.hpp:22:3:   required from 'Eigen::SparseMatrix<Scalar> tmbutils::asSparseMatrix(SEXP) [with Type = double; SEXP = SEXPREC*]'
src/LGCP_cov_spde_marks_prob.cpp:16:3:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h: In instantiation of 'class Eigen::SparseMatrixBase<Eigen::SparseMatrix<double, 0, long long int> >':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:36:7:   required from 'class Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, long long int> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:96:7:   required from 'class Eigen::SparseMatrix<double, 0, long long int>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1080:15:   required from 'Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:685:15:   required from 'Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::SparseMatrix(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/R_inla.hpp:39:67:   required from 'Eigen::SparseMatrix<Scalar> R_inla::Q_spde(R_inla::spde_t<Type>, Type) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:113:32:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrixBase.h:47:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
In file included from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Core:439,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/Dense:1,
                 from C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/TMB.hpp:53,
                 from src/LGCP_cov_spde_marks_prob.cpp:1:
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::SparseMatrix<double, 0, long long int>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:298:80:   required from 'struct Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, long long int> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1391:8:   required from 'struct Eigen::internal::evaluator<Eigen::SparseMatrix<double, 0, long long int> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1081:19:   required from 'Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:685:15:   required from 'Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::SparseMatrix(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/R_inla.hpp:39:67:   required from 'Eigen::SparseMatrix<Scalar> R_inla::Q_spde(R_inla::spde_t<Type>, Type) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:113:32:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:300:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:551:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >, 3>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MapBase.h:37:34:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Map.h:94:79:   required from 'class Eigen::Map<Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1084:12:   required from 'Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:685:15:   required from 'Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::SparseMatrix(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, -1> >, const Eigen::SparseMatrix<double> > >, const Eigen::SparseMatrix<double> >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/R_inla.hpp:39:67:   required from 'Eigen::SparseMatrix<Scalar> R_inla::Q_spde(R_inla::spde_t<Type>, Type) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:113:32:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::SparseMatrix<double, 1, int>, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:298:80:   required from 'struct Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 1, int> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1391:8:   required from 'struct Eigen::internal::evaluator<Eigen::SparseMatrix<double, 1, int> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1067:99:   required from 'Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::SparseMatrix<double, 1, int>; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:949:7:   required from 'void Eigen::internal::set_from_triplets(const InputIterator&, const InputIterator&, SparseMatrixType&, DupFunctor) [with InputIterator = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; SparseMatrixType = Eigen::SparseMatrix<double>; DupFunctor = Eigen::internal::scalar_sum_op<double, double>]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:996:92:   required from 'void Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::setFromTriplets(const InputIterators&, const InputIterators&) [with InputIterators = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/spmat.hpp:22:3:   required from 'Eigen::SparseMatrix<Scalar> tmbutils::asSparseMatrix(SEXP) [with Type = double; SEXP = SEXPREC*]'
src/LGCP_cov_spde_marks_prob.cpp:16:3:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >; Eigen::Index = long long int]':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Redux.h:225:63:   required from 'static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> > >; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Redux.h:418:56:   required from 'typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<double, double>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Redux.h:453:73:   required from 'typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::Array<double, -1, 1> >; typename Eigen::internal::traits<T>::Scalar = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:923:11:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:650:34: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, -1, 1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from 'class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>, Eigen::Matrix<int, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:327:30:   required from 'Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<int, -1, 1>; Eigen::DenseBase<Derived>::Scalar = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from 'Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<int, -1, 1>]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:932:5:   required from 'void Eigen::internal::set_from_triplets(const InputIterator&, const InputIterator&, SparseMatrixType&, DupFunctor) [with InputIterator = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; SparseMatrixType = Eigen::SparseMatrix<double>; DupFunctor = Eigen::internal::scalar_sum_op<double, double>]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:996:92:   required from 'void Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::setFromTriplets(const InputIterators&, const InputIterators&) [with InputIterators = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/spmat.hpp:22:3:   required from 'Eigen::SparseMatrix<Scalar> tmbutils::asSparseMatrix(SEXP) [with Type = double; SEXP = SEXPREC*]'
src/LGCP_cov_spde_marks_prob.cpp:16:3:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:478:7:   required from 'class Eigen::DenseCoeffsBase<Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >, 2>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MapBase.h:37:34:   required from 'class Eigen::MapBase<Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Map.h:94:79:   required from 'class Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:65:32:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1089:50:   required from 'Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::SparseMatrix<double, 1, int>; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:949:7:   required from 'void Eigen::internal::set_from_triplets(const InputIterator&, const InputIterator&, SparseMatrixType&, DupFunctor) [with InputIterator = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; SparseMatrixType = Eigen::SparseMatrix<double>; DupFunctor = Eigen::internal::scalar_sum_op<double, double>]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:996:92:   required from 'void Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::setFromTriplets(const InputIterators&, const InputIterators&) [with InputIterators = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/spmat.hpp:22:3:   required from 'Eigen::SparseMatrix<Scalar> tmbutils::asSparseMatrix(SEXP) [with Type = double; SEXP = SEXPREC*]'
src/LGCP_cov_spde_marks_prob.cpp:16:3:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'Eigen::Index Eigen::internal::first_default_aligned(const Eigen::DenseBase<Derived>&) [with Derived = Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >; Eigen::Index = long long int]':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Redux.h:225:63:   required from 'static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<int, int>; Derived = Eigen::internal::redux_evaluator<Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> > >; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Redux.h:418:56:   required from 'typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<int, int>; Derived = Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Redux.h:453:73:   required from 'typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::Map<const Eigen::Matrix<int, -1, 1>, 0, Eigen::Stride<0, 0> >; typename Eigen::internal::traits<T>::Scalar = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:65:36:   required from 'Eigen::Index Eigen::SparseCompressedBase<Derived>::nonZeros() const [with Derived = Eigen::SparseMatrix<double, 1, int>; Eigen::Index = long long int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseCompressedBase.h:163:21:   required from 'Eigen::SparseCompressedBase<Derived>::InnerIterator::InnerIterator(const Eigen::SparseCompressedBase<Derived>&, Eigen::Index) [with Derived = Eigen::SparseMatrix<double, 1, int>; Eigen::Index = long long int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:1089:50:   required from 'Eigen::SparseMatrix<_Scalar, _Options, _StorageIndex>& Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::operator=(const Eigen::SparseMatrixBase<OtherDerived>&) [with OtherDerived = Eigen::SparseMatrix<double, 1, int>; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:949:7:   required from 'void Eigen::internal::set_from_triplets(const InputIterator&, const InputIterator&, SparseMatrixType&, DupFunctor) [with InputIterator = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; SparseMatrixType = Eigen::SparseMatrix<double>; DupFunctor = Eigen::internal::scalar_sum_op<double, double>]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/SparseCore/SparseMatrix.h:996:92:   required from 'void Eigen::SparseMatrix<_Scalar, _Flags, _StorageIndex>::setFromTriplets(const InputIterators&, const InputIterators&) [with InputIterators = __gnu_cxx::__normal_iterator<Eigen::Triplet<double, int>*, std::vector<Eigen::Triplet<double, int>, std::allocator<Eigen::Triplet<double, int> > > >; _Scalar = double; int _Options = 0; _StorageIndex = int]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/spmat.hpp:22:3:   required from 'Eigen::SparseMatrix<Scalar> tmbutils::asSparseMatrix(SEXP) [with Type = double; SEXP = SEXPREC*]'
src/LGCP_cov_spde_marks_prob.cpp:16:3:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:650:34: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<int>::type' {aka '__vector(2) long long int'} [-Wignored-attributes]
   return internal::first_aligned<int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h: In instantiation of 'class Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >, 0>':
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseBase.h:41:34:   required from 'class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/MatrixBase.h:48:34:   required from 'class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:60:7:   required from 'class Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:327:30:   required from 'Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from 'Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, 1>]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/ProductEvaluators.h:349:5:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/PlainObjectBase.h:818:7:   required from 'void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::ArrayWrapper<const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> >; OtherDerived = Eigen::ArrayWrapper<const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> >; Derived = Eigen::Array<double, -1, 1>]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/Array.h:171:31:   required from 'Eigen::Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Array(const T&) [with T = Eigen::ArrayWrapper<const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> >; _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmbutils/vector.hpp:24:22:   required from 'tmbutils::vector<Type>::vector(T1) [with T1 = Eigen::ArrayWrapper<const Eigen::Product<Eigen::SparseMatrix<double>, Eigen::MatrixWrapper<Eigen::Array<double, -1, 1> >, 0> >; Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/convenience.hpp:49:33:   required from 'tmbutils::vector<Type> operator*(Eigen::SparseMatrix<Scalar>, tmbutils::vector<Type>) [with Type = double]'
src/LGCP_cov_spde_marks_prob.cpp:137:30:   required from 'Type objective_function<Type>::operator()() [with Type = double]'
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/TMB/include/tmb_core.hpp:1734:16:   required from here
C:/Users/DAVIDL~1/DOCUME~1/R/WIN-LI~1/4.0/RCPPEI~1/include/Eigen/src/Core/DenseCoeffsBase.h:55:30: warning: ignoring attributes on template argument 'Eigen::internal::packet_traits<double>::type' {aka '__vector(2) double'} [-Wignored-attributes]
                      >::type PacketReturnType;
                              ^~~~~~~~~~~~~~~~
